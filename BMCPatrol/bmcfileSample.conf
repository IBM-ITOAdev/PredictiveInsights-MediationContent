input {
  scabmcfile { 
    path => ["/path/to/my/input/*.txt"]
    done_dir => ["/path/to/my/done"]
#    ready_file => "/path/to/my/input/READY" # 
    groups => [ "MEMORY", "CPU","NETWORK","PROCESS", "DISK","SWAP",
               "ORACLE_CAPACITY","ORACLE_TBSP_INSTANCE"]
  }
}

output {

  if "MEMORY" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                          "MEMFreeMem",
                          "MEMUsedMem",
                          "MEMAppUsablePerc",
                          "MEMFreeMem",
                          "MEMLRead",
                          "MEMLWrt", 
                          "MEMPFault", 
                          "MEMPRead",
                          "MEMPWrt",
                          "MEMPageIn", 
                          "MEMPageOut",
                          "MEMPageScanned", 
                          "MEMTotalMem",
                          "MEMUsedBufCache", 
                          "MEMUsedKernel",
                          "MEMUsedMem",
                          "MEMUsedMemPerc", 
                          "MEMUsedProcess",
                          "MEMWCache" ]
      path => "/path/to/my/output/memory.csv"
      group => "MEMORY" 
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true 
   }
  }

  if "CPU" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                           "CPUCpuUtil",
                           "CPUEntlUtil",
                           "CPUIdleTime",
                           "CPULoad",
                           "CPUPhyUtil",
                           "CPUPoolEntlUtil",
                           "CPUPoolUtil",
                           "CPURunQSize",
                           "CPUSharedPoolIdleTime",
                           "CPUSharedPoolIdleTimeNorm",
                           "CPUSysTime",
                           "CPUUserTime",
                           "CPUUtilPerVCpu",
                           "CPUWio"        ]
      path   =>   "/path/to/my/output/cpu.csv"
      group  =>  "CPU"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true 
   }
  }


  if "NETWORK" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                          "NETCollisionPrc",
                          "NETInErrPrc",
                          "NETOutErrPrc", 
                          "NETPacketsIn",
                          "NETPacketsOut", 
                          "NETCollisionPrc", 
                          "NETInErrPrc",
                          "NETOutErrPrc", 
                          "NETPacketsIn",
                          "NETPacketsOut", 
                          "NETCollisionPrc", 
                          "NETInErrPrc",
                          "NETOutErrPrc", 
                          "NETPacketsIn",
                          "NETPacketsOut" ]
      path   =>   "/path/to/my/output/network.csv"
      group  =>  "NETWORK"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true 
   }
  }

  if "PROCESS" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                    "PROCAvgUsrProc",
                    "PROCNoZombies",
                    "PROCNumProcs",
                    "PROCProcWait",
                    "PROCUserProcs"
                         ]
      path   =>   "/path/to/my/output/process.csv"
      group  =>  "PROCESS"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true
   }
  }

  if "DISK" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
      	     	"DSKAvgQueue",
                        "DSKAvgServ",
                        "DSKBps",
                        "DSKPercentBusy",
                        "DSKRead",
                        "DSKWrite",
                        "DSKBps"
                         ]
      path   =>   "/path/to/my/output/disk.csv"
      group  =>  "DISK"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true
   }
  }

  if "SWAP" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                        "SWPTotSwapUsedPercent"
                         ]
      path   =>   "/path/to/my/output/swap.csv"
      group  =>  "SWAP"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true
   }
  }

  if "ORACLE_CAPACITY" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                        "ProcsUsed",
                        "LocksUsed",
                        "SessionsUsed",
                        "TransUsed"
                         ]
      path   =>   "/path/to/my/output/oraclecapacity.csv"
      group  =>  "ORACLECAPACITY"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true
   }
  }

  if "ORACLE_TBSP_INSTANCE" in [group] or [SCAWindowMarker] {
    scacsv {
      fields => ["timestamp","node","instance",
                        "PhyReads",
					"PhyWrites"
                         ]
      path   =>   "/path/to/my/output/oracletbspinstance.csv"
      group  =>  "ORACLETBSPINSTANCE"
      time_field => "epoch"
      time_field_format => "epoch"
      timestamp_output_format => "yyyyMMddHHmmssSSS"
      increment_time => true
   }
  }


}